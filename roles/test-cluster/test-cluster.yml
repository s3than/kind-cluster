
- name: Install, configure, and start quickstart cluster master
  block:
    - name: Create Cluster
      k8s:
        state: present
        definition:
          apiVersion: cluster.x-k8s.io/v1alpha2
          kind: Cluster
          metadata:
            name: capi-quickstart
            namespace: default
          spec:
            clusterNetwork:
              pods:
                cidrBlocks: ["192.168.0.0/16"]
            infrastructureRef:
              apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
              kind: DockerCluster
              name: capi-quickstart

    - name: Create DockerCluster
      k8s:
        state: present
        definition:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
          kind: DockerCluster
          metadata:
            name: capi-quickstart
            namespace: default

    - name: Create Cluster Machine
      k8s:
        state: present
        definition:
          apiVersion: cluster.x-k8s.io/v1alpha2
          kind: Machine
          metadata:
            name: capi-quickstart-controlplane-0
            namespace: default
            labels:
              cluster.x-k8s.io/control-plane: "true"
              cluster.x-k8s.io/cluster-name: "capi-quickstart"
          spec:
            version: v1.15.3
            bootstrap:
              configRef:
                apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
                kind: KubeadmConfig
                name: capi-quickstart-controlplane-0
            infrastructureRef:
              kind: DockerMachine
              apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
              name: capi-quickstart-controlplane-0

    - name: Create Cluster DockerMachine
      k8s:
        state: present
        definition:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
          kind: DockerMachine
          metadata:
            name: capi-quickstart-controlplane-0
            namespace: default

    - name: Create Cluster KubeadmConfig
      k8s:
        state: present
        definition:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
          kind: KubeadmConfig
          metadata:
            name: capi-quickstart-controlplane-0
            namespace: default
          spec:
            initConfiguration:
              nodeRegistration:
                kubeletExtraArgs:
                  # Default thresholds are higher to provide a buffer before resources
                  # are completely depleted, at the cost of requiring more total
                  # resources. These low thresholds allow running with fewer resources.
                  # Appropriate for testing or development only.
                  eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
            clusterConfiguration:
              controllerManager:
                extraArgs:
                  # Enables dynamic storage provisioning without a cloud provider.
                  # Appropriate for testing or development only.
                  enable-hostpath-provisioner: "true"

    - name: Wait for test cluster to be ready
      command:
        argv:
        - kubectl
        - get
        - clusters.cluster.x-k8s.io
        - capi-quickstart
        - -o=json
      register: cluster_output

    - debug:
        var: "{{ cluster_output }}"

    # - name: Wait for test cluster to be ready
    #   k8s_info:
    #     kind: Cluster
    #     namespace: default
    #   register: cluster_output



    # - name: Get a Capi Kubeconfig
    #   k8s_info:
    #     api_version: v1
    #     kind: Secret
    #     name: capi-quickstart-kubeconfig
    #     namespace: default
    #   register: kube_config

    # - name: Write kubeconfig file
    #   copy:
    #     content: "{{ kube_config | json_query('to_string(resources[0].data.value)') | b64decode }}"
    #     dest: /tmp/capi-quickstart-kubeconfig

    # - name: Wait for kube-system to be ready
    #   k8s_info:
    #     kind: Pod
    #     namespace: kube-system
    #     kubeconfig: /tmp/capi-quickstart-kubeconfig
    #   register: pods_output
    #   retries: 20
    #   delay: 45
    #   until: "pods_output | json_query('resources[*].status.containerStatuses[?ready == `false`][].ready | contains(@, `false`)') != true"


# apiVersion: cluster.x-k8s.io/v1alpha2
# kind: MachineDeployment
# metadata:
#   name: capi-quickstart-worker
#   labels:
#     cluster.x-k8s.io/cluster-name: capi-quickstart
#     # Labels beyond this point are for example purposes,
#     # feel free to add more or change with something more meaningful.
#     # Sync these values with spec.selector.matchLabels and spec.template.metadata.labels.
#     nodepool: nodepool-0
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       cluster.x-k8s.io/cluster-name: capi-quickstart
#       nodepool: nodepool-0
#   template:
#     metadata:
#       labels:
#         cluster.x-k8s.io/cluster-name: capi-quickstart
#         nodepool: nodepool-0
#     spec:
#       version: v1.15.3
#       bootstrap:
#         configRef:
#           name: capi-quickstart-worker
#           apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
#           kind: KubeadmConfigTemplate
#       infrastructureRef:
#         name: capi-quickstart-worker
#         apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
#         kind: DockerMachineTemplate
# ---
# apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
# kind: DockerMachineTemplate
# metadata:
#   name: capi-quickstart-worker
# spec:
#   template:
#     spec: {}
# ---
# apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
# kind: KubeadmConfigTemplate
# metadata:
#   name: capi-quickstart-worker
# spec:
#   template:
#     spec:
#       # For more information about these values,
#       # refer to the Kubeadm Bootstrap Provider documentation.
#       joinConfiguration:
#         nodeRegistration:
#           kubeletExtraArgs:
#             eviction-hard: nodefs.available<0%,nodefs.inodesFree<0%,imagefs.available<0%
#       clusterConfiguration:
#         controllerManager:
#           extraArgs:
#             enable-hostpath-provisioner: "true"